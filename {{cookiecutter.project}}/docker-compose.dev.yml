version: '3'

services:

  nginx:
    build: ./nginx
    container_name: {{cookiecutter.project}}_nginx
    volumes:
      - ./server/app/uploads:/uploads/
      - ./server/app/static:/static/
      - gunicorn_socket:/gunicorn_socket
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
    networks:
      - nginx_network

  cache:
    container_name: {{cookiecutter.project}}_redis
    image: redis:alpine
    expose:
      - 6379
    networks:
      - nginx_network

  db:
    container_name: {{cookiecutter.project}}_postgres
    image: postgres:10.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - nginx_network
      
  pgbouncer:
    hostname: pgbouncer
    image: raphaelpr/pgbouncer:latest
    ports:
      - "6432:6432"
    environment:
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - POOL_MODE=transaction
      - MAX_CLIENT_CONN=1000
      - DEFAULT_POOL_SIZE=20
      - RESERVE_POOL_SIZE=5
      - LISTEN_ADDR=*
      - AUTH_TYPE=plain
      - AUTH_FILE=/etc/pgbouncer/userlist.txt
    links:
      - db:db
    networks:
      - nginx_network

  backend:
    container_name: {{cookiecutter.project}}_backend
    build: ./server
    command: bash -c "python manage.py migrate &&
      python manage.py makemessages --all -e py,html,jinja &&
      python manage.py collectstatic <<<yes &&
      gunicorn app.wsgi -b unix:/gunicorn_socket/socket -c app/gunicorn.py --pid=gunicorn.pid"
    environment:
      - DJANGO_SECRET_KEY=CHANGEME!!!
      - DJANGO_DB_URL=psql://postgres:postgres@db:6432/db
      - DJANGO_CACHE_URL=redis://cache:6379
      - CELERY_BROKER_URL=redis://cache:6379
    volumes:
      - .:/code
      - ./server:/code/server
      - ./logs/django:/var/log/django
      - gunicorn_socket:/gunicorn_socket
    depends_on:
      - db
      - cache
    links:
      - db:db
      - cache:redis
    networks:
      - nginx_network

  {% if cookiecutter.celery == "Enable" %}
  celery:
    container_name: {{cookiecutter.project}}_celery
    build: ./server
    command: bash -c "celery -A app worker -l INFO"
    environment:
      - CELERY_BROKER_URL=redis://cache:6379
      - DJANGO_DB_URL=psql://postgres:postgres@db:6432/db
      - DJANGO_CACHE_URL=redis://cache:6379
      - DJANGO_SETTINGS_MODULE=app.settings
    volumes:
      - .:/code
      - ./server:/code/server
      - ./logs/celery:/var/log/celery
    links:
      - db
      - cache
      - backend
    networks:
      - nginx_network

  celery_beat:
    container_name: {{cookiecutter.project}}_celery_beat
    build: ./server
    command: bash -c "celery -A app beat -l INFO"
    environment:
      - CELERY_BROKER_URL=redis://cache:6379
      - DJANGO_DB_URL=psql://postgres:postgres@db:6432/db
      - DJANGO_CACHE_URL=redis://cache:6379
      - DJANGO_SETTINGS_MODULE=app.settings
    volumes:
      - .:/code
      - ./server:/code/server
    links:
      - db
      - cache
      - backend
  {% endif %}

volumes:
  postgres_data:
  gunicorn_socket:

networks:
  nginx_network:
    driver: bridge
