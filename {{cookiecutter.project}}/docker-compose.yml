version: '3'

services:

  frontend:
    build: ./client
    command: bash -c "npm run dev"
    volumes:
      - .:/code
      - ./client:/code/client
      - node_modules:/code/client/node_modules

  cache:
    image: redis:alpine
    expose:
      - 6379

  db:
    image: postgres:10.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=db
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  backend:
    build: ./server
    command: >
      bash -c "python manage.py migrate
      && python manage.py makemessages --all -e py,html,jinja
      && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DJANGO_DB_URL=psql://postgres:postgres@db:5432/db
      - DJANGO_CACHE_URL=redis://cache:6379
      - CELERY_BROKER_URL=redis://cache:6379
    ports:
      - 8535:8000
    volumes:
      - .:/code
      - ./server:/code/server
    depends_on:
      - db
      - cache
    links:
      - db:db
      - cache:redis
  {% if cookiecutter.celery == "Enable" %}
  celery:
    build: ./server
    command: bash -c "celery -A app worker -l INFO -B"
    environment:
      - CELERY_BROKER_URL=redis://cache:6379
      - DJANGO_DB_URL=psql://postgres:postgres@db:5432/db
      - DJANGO_CACHE_URL=redis://cache:6379
      - DJANGO_SETTINGS_MODULE=app.settings
    volumes:
      - .:/code
      - ./server:/code/server
    links:
      - db
      - cache
      - backend
  {% endif %}
volumes:
  postgres_data:
  node_modules:
